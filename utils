#!/usr/bin/env bash

image() {
  if [ -z "$*" ]; then
    echo "usage: image <prompt> [<size>]" >&2
    return 1
  fi

  local prompt="$1"
  local size="${3:-512x512}"
  local url

  url=$(curl -s "https://api.openai.com/v1/images/generations" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d "{
        \"prompt\": \"$prompt\",
        \"size\": \"$size\",
        \"n\": 1
      }" \
    | jq -r '.data[0].url')

  if [[ -n "$url" ]]; then
    curl -o - "$url"
  else
    echo "Error: Could not retrieve the image URL."
    return 1
  fi
}

re-image() {
  if [ -z "$*" ]; then
    echo "usage: re-image <source-image> <prompt>" >&2
    return 1
  fi

  local from="$1"
  local prompt="$2"
  local size
  local temp_file

  # Convert image to RGBA format
  temp_file=$(mktemp "temp-XXXXXX.png")
  convert "$from" -alpha on "$temp_file"

  # Get the dimensions of the image
  size=$(identify -format "%wx%h" "$temp_file")

  # Make the API request
  url=$(curl -s "https://api.openai.com/v1/images/edits" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -F image="@$temp_file" \
    -F prompt="$prompt" \
    -F n=1 \
    -F size="$size" \
    | jq -r '.data[0].url')

  # Clean up temporary file
  rm "$temp_file"

  if [[ -n "$url" ]]; then
    curl -o - "$url"
  else
    echo "Error: Could not retrieve the image URL."
    return 1
  fi
}
